//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("gb_MarketPlusModel", "FK_Properties_Categories", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ShopPlus.Categories), "Properties", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShopPlus.Properties), true)]
[assembly: EdmRelationshipAttribute("gb_MarketPlusModel", "FK_SubCategories_Categories", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShopPlus.Categories), "SubCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShopPlus.SubCategories), true)]
[assembly: EdmRelationshipAttribute("gb_MarketPlusModel", "FK_ProductProperties_Products", "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShopPlus.Products), "ProductProperties", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShopPlus.ProductProperties), true)]
[assembly: EdmRelationshipAttribute("gb_MarketPlusModel", "FK_ProductProperties_Properties", "Properties", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShopPlus.Properties), "ProductProperties", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShopPlus.ProductProperties), true)]
[assembly: EdmRelationshipAttribute("gb_MarketPlusModel", "FK_ProductProperties_PropertyValues", "PropertyValues", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShopPlus.PropertyValues), "ProductProperties", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShopPlus.ProductProperties), true)]
[assembly: EdmRelationshipAttribute("gb_MarketPlusModel", "FK_PropertyValues_Products", "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShopPlus.Products), "PropertyValues", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShopPlus.PropertyValues), true)]
[assembly: EdmRelationshipAttribute("gb_MarketPlusModel", "FK_Properties_SubCategories", "SubCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ShopPlus.SubCategories), "Properties", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShopPlus.Properties), true)]

#endregion

namespace ShopPlus
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class StorageEntity : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект StorageEntity, используя строку соединения из раздела "StorageEntity" файла конфигурации приложения.
        /// </summary>
        public StorageEntity() : base("name=StorageEntity", "StorageEntity")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта StorageEntity.
        /// </summary>
        public StorageEntity(string connectionString) : base(connectionString, "StorageEntity")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта StorageEntity.
        /// </summary>
        public StorageEntity(EntityConnection connection) : base(connection, "StorageEntity")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Blacklist> Blacklist
        {
            get
            {
                if ((_Blacklist == null))
                {
                    _Blacklist = base.CreateObjectSet<Blacklist>("Blacklist");
                }
                return _Blacklist;
            }
        }
        private ObjectSet<Blacklist> _Blacklist;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Brands> Brands
        {
            get
            {
                if ((_Brands == null))
                {
                    _Brands = base.CreateObjectSet<Brands>("Brands");
                }
                return _Brands;
            }
        }
        private ObjectSet<Brands> _Brands;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Categories> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Categories>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Categories> _Categories;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Newsletters> Newsletters
        {
            get
            {
                if ((_Newsletters == null))
                {
                    _Newsletters = base.CreateObjectSet<Newsletters>("Newsletters");
                }
                return _Newsletters;
            }
        }
        private ObjectSet<Newsletters> _Newsletters;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ProductProperties> ProductProperties
        {
            get
            {
                if ((_ProductProperties == null))
                {
                    _ProductProperties = base.CreateObjectSet<ProductProperties>("ProductProperties");
                }
                return _ProductProperties;
            }
        }
        private ObjectSet<ProductProperties> _ProductProperties;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Products> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Products>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Products> _Products;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Properties> Properties
        {
            get
            {
                if ((_Properties == null))
                {
                    _Properties = base.CreateObjectSet<Properties>("Properties");
                }
                return _Properties;
            }
        }
        private ObjectSet<Properties> _Properties;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PropertyValues> PropertyValues
        {
            get
            {
                if ((_PropertyValues == null))
                {
                    _PropertyValues = base.CreateObjectSet<PropertyValues>("PropertyValues");
                }
                return _PropertyValues;
            }
        }
        private ObjectSet<PropertyValues> _PropertyValues;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Shops> Shops
        {
            get
            {
                if ((_Shops == null))
                {
                    _Shops = base.CreateObjectSet<Shops>("Shops");
                }
                return _Shops;
            }
        }
        private ObjectSet<Shops> _Shops;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<SubCategories> SubCategories
        {
            get
            {
                if ((_SubCategories == null))
                {
                    _SubCategories = base.CreateObjectSet<SubCategories>("SubCategories");
                }
                return _SubCategories;
            }
        }
        private ObjectSet<SubCategories> _SubCategories;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Suppliers> Suppliers
        {
            get
            {
                if ((_Suppliers == null))
                {
                    _Suppliers = base.CreateObjectSet<Suppliers>("Suppliers");
                }
                return _Suppliers;
            }
        }
        private ObjectSet<Suppliers> _Suppliers;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Transporters> Transporters
        {
            get
            {
                if ((_Transporters == null))
                {
                    _Transporters = base.CreateObjectSet<Transporters>("Transporters");
                }
                return _Transporters;
            }
        }
        private ObjectSet<Transporters> _Transporters;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Units> Units
        {
            get
            {
                if ((_Units == null))
                {
                    _Units = base.CreateObjectSet<Units>("Units");
                }
                return _Units;
            }
        }
        private ObjectSet<Units> _Units;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<AreasNew> AreasNew
        {
            get
            {
                if ((_AreasNew == null))
                {
                    _AreasNew = base.CreateObjectSet<AreasNew>("AreasNew");
                }
                return _AreasNew;
            }
        }
        private ObjectSet<AreasNew> _AreasNew;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Blacklist. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToBlacklist(Blacklist blacklist)
        {
            base.AddObject("Blacklist", blacklist);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Brands. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToBrands(Brands brands)
        {
            base.AddObject("Brands", brands);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Categories. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCategories(Categories categories)
        {
            base.AddObject("Categories", categories);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Newsletters. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToNewsletters(Newsletters newsletters)
        {
            base.AddObject("Newsletters", newsletters);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ProductProperties. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToProductProperties(ProductProperties productProperties)
        {
            base.AddObject("ProductProperties", productProperties);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Products. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToProducts(Products products)
        {
            base.AddObject("Products", products);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Properties. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToProperties(Properties properties)
        {
            base.AddObject("Properties", properties);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PropertyValues. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPropertyValues(PropertyValues propertyValues)
        {
            base.AddObject("PropertyValues", propertyValues);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Shops. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToShops(Shops shops)
        {
            base.AddObject("Shops", shops);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet SubCategories. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSubCategories(SubCategories subCategories)
        {
            base.AddObject("SubCategories", subCategories);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Suppliers. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSuppliers(Suppliers suppliers)
        {
            base.AddObject("Suppliers", suppliers);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet sysdiagrams. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Transporters. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTransporters(Transporters transporters)
        {
            base.AddObject("Transporters", transporters);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Units. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUnits(Units units)
        {
            base.AddObject("Units", units);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Users. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet AreasNew. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAreasNew(AreasNew areasNew)
        {
            base.AddObject("AreasNew", areasNew);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_MarketPlusModel", Name="AreasNew")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AreasNew : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта AreasNew.
        /// </summary>
        /// <param name="areaId">Исходное значение свойства AreaId.</param>
        /// <param name="areaName">Исходное значение свойства AreaName.</param>
        public static AreasNew CreateAreasNew(global::System.Int32 areaId, global::System.String areaName)
        {
            AreasNew areasNew = new AreasNew();
            areasNew.AreaId = areaId;
            areasNew.AreaName = areaName;
            return areasNew;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AreaId
        {
            get
            {
                return _AreaId;
            }
            set
            {
                if (_AreaId != value)
                {
                    OnAreaIdChanging(value);
                    ReportPropertyChanging("AreaId");
                    _AreaId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AreaId");
                    OnAreaIdChanged();
                }
            }
        }
        private global::System.Int32 _AreaId;
        partial void OnAreaIdChanging(global::System.Int32 value);
        partial void OnAreaIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AreaName
        {
            get
            {
                return _AreaName;
            }
            set
            {
                OnAreaNameChanging(value);
                ReportPropertyChanging("AreaName");
                _AreaName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AreaName");
                OnAreaNameChanged();
            }
        }
        private global::System.String _AreaName;
        partial void OnAreaNameChanging(global::System.String value);
        partial void OnAreaNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_MarketPlusModel", Name="Blacklist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Blacklist : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Blacklist.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="contact">Исходное значение свойства Contact.</param>
        public static Blacklist CreateBlacklist(global::System.Int32 id, global::System.String contact)
        {
            Blacklist blacklist = new Blacklist();
            blacklist.Id = id;
            blacklist.Contact = contact;
            return blacklist;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Contact
        {
            get
            {
                return _Contact;
            }
            set
            {
                OnContactChanging(value);
                ReportPropertyChanging("Contact");
                _Contact = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Contact");
                OnContactChanged();
            }
        }
        private global::System.String _Contact;
        partial void OnContactChanging(global::System.String value);
        partial void OnContactChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_MarketPlusModel", Name="Brands")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Brands : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Brands.
        /// </summary>
        /// <param name="brandId">Исходное значение свойства BrandId.</param>
        /// <param name="brandName">Исходное значение свойства BrandName.</param>
        public static Brands CreateBrands(global::System.Int32 brandId, global::System.String brandName)
        {
            Brands brands = new Brands();
            brands.BrandId = brandId;
            brands.BrandName = brandName;
            return brands;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandId
        {
            get
            {
                return _BrandId;
            }
            set
            {
                if (_BrandId != value)
                {
                    OnBrandIdChanging(value);
                    ReportPropertyChanging("BrandId");
                    _BrandId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BrandId");
                    OnBrandIdChanged();
                }
            }
        }
        private global::System.Int32 _BrandId;
        partial void OnBrandIdChanging(global::System.Int32 value);
        partial void OnBrandIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BrandName
        {
            get
            {
                return _BrandName;
            }
            set
            {
                OnBrandNameChanging(value);
                ReportPropertyChanging("BrandName");
                _BrandName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BrandName");
                OnBrandNameChanged();
            }
        }
        private global::System.String _BrandName;
        partial void OnBrandNameChanging(global::System.String value);
        partial void OnBrandNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_MarketPlusModel", Name="Categories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Categories : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Categories.
        /// </summary>
        /// <param name="categoryId">Исходное значение свойства CategoryId.</param>
        /// <param name="categoryName">Исходное значение свойства CategoryName.</param>
        /// <param name="metaTitle">Исходное значение свойства MetaTitle.</param>
        public static Categories CreateCategories(global::System.Int32 categoryId, global::System.String categoryName, global::System.String metaTitle)
        {
            Categories categories = new Categories();
            categories.CategoryId = categoryId;
            categories.CategoryName = categoryName;
            categories.MetaTitle = metaTitle;
            return categories;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecondCategoryName
        {
            get
            {
                return _SecondCategoryName;
            }
            set
            {
                OnSecondCategoryNameChanging(value);
                ReportPropertyChanging("SecondCategoryName");
                _SecondCategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecondCategoryName");
                OnSecondCategoryNameChanged();
            }
        }
        private global::System.String _SecondCategoryName;
        partial void OnSecondCategoryNameChanging(global::System.String value);
        partial void OnSecondCategoryNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MultimediaId
        {
            get
            {
                return _MultimediaId;
            }
            set
            {
                OnMultimediaIdChanging(value);
                ReportPropertyChanging("MultimediaId");
                _MultimediaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MultimediaId");
                OnMultimediaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MultimediaId;
        partial void OnMultimediaIdChanging(Nullable<global::System.Int32> value);
        partial void OnMultimediaIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MetaTitle
        {
            get
            {
                return _MetaTitle;
            }
            set
            {
                OnMetaTitleChanging(value);
                ReportPropertyChanging("MetaTitle");
                _MetaTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MetaTitle");
                OnMetaTitleChanged();
            }
        }
        private global::System.String _MetaTitle;
        partial void OnMetaTitleChanging(global::System.String value);
        partial void OnMetaTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaKeywords
        {
            get
            {
                return _MetaKeywords;
            }
            set
            {
                OnMetaKeywordsChanging(value);
                ReportPropertyChanging("MetaKeywords");
                _MetaKeywords = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaKeywords");
                OnMetaKeywordsChanged();
            }
        }
        private global::System.String _MetaKeywords;
        partial void OnMetaKeywordsChanging(global::System.String value);
        partial void OnMetaKeywordsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaDescription
        {
            get
            {
                return _MetaDescription;
            }
            set
            {
                OnMetaDescriptionChanging(value);
                ReportPropertyChanging("MetaDescription");
                _MetaDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaDescription");
                OnMetaDescriptionChanged();
            }
        }
        private global::System.String _MetaDescription;
        partial void OnMetaDescriptionChanging(global::System.String value);
        partial void OnMetaDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaKeywordsTags
        {
            get
            {
                return _MetaKeywordsTags;
            }
            set
            {
                OnMetaKeywordsTagsChanging(value);
                ReportPropertyChanging("MetaKeywordsTags");
                _MetaKeywordsTags = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaKeywordsTags");
                OnMetaKeywordsTagsChanged();
            }
        }
        private global::System.String _MetaKeywordsTags;
        partial void OnMetaKeywordsTagsChanging(global::System.String value);
        partial void OnMetaKeywordsTagsChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_MarketPlusModel", "FK_Properties_Categories", "Properties")]
        public EntityCollection<Properties> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Properties>("gb_MarketPlusModel.FK_Properties_Categories", "Properties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Properties>("gb_MarketPlusModel.FK_Properties_Categories", "Properties", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_MarketPlusModel", "FK_SubCategories_Categories", "SubCategories")]
        public EntityCollection<SubCategories> SubCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubCategories>("gb_MarketPlusModel.FK_SubCategories_Categories", "SubCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubCategories>("gb_MarketPlusModel.FK_SubCategories_Categories", "SubCategories", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_MarketPlusModel", Name="Newsletters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Newsletters : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Newsletters.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="created">Исходное значение свойства Created.</param>
        /// <param name="text">Исходное значение свойства Text.</param>
        public static Newsletters CreateNewsletters(global::System.Int32 id, global::System.DateTime created, global::System.String text)
        {
            Newsletters newsletters = new Newsletters();
            newsletters.Id = id;
            newsletters.Created = created;
            newsletters.Text = text;
            return newsletters;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_MarketPlusModel", Name="ProductProperties")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductProperties : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ProductProperties.
        /// </summary>
        /// <param name="propertyId">Исходное значение свойства PropertyId.</param>
        /// <param name="productId">Исходное значение свойства ProductId.</param>
        /// <param name="propertyValueId">Исходное значение свойства PropertyValueId.</param>
        public static ProductProperties CreateProductProperties(global::System.Int32 propertyId, global::System.Int32 productId, global::System.Int32 propertyValueId)
        {
            ProductProperties productProperties = new ProductProperties();
            productProperties.PropertyId = propertyId;
            productProperties.ProductId = productId;
            productProperties.PropertyValueId = propertyValueId;
            return productProperties;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                if (_PropertyId != value)
                {
                    OnPropertyIdChanging(value);
                    ReportPropertyChanging("PropertyId");
                    _PropertyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyId");
                    OnPropertyIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyValueId
        {
            get
            {
                return _PropertyValueId;
            }
            set
            {
                OnPropertyValueIdChanging(value);
                ReportPropertyChanging("PropertyValueId");
                _PropertyValueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PropertyValueId");
                OnPropertyValueIdChanged();
            }
        }
        private global::System.Int32 _PropertyValueId;
        partial void OnPropertyValueIdChanging(global::System.Int32 value);
        partial void OnPropertyValueIdChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_MarketPlusModel", "FK_ProductProperties_Products", "Products")]
        public Products Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Products>("gb_MarketPlusModel.FK_ProductProperties_Products", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Products>("gb_MarketPlusModel.FK_ProductProperties_Products", "Products").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Products> ProductsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Products>("gb_MarketPlusModel.FK_ProductProperties_Products", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Products>("gb_MarketPlusModel.FK_ProductProperties_Products", "Products", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_MarketPlusModel", "FK_ProductProperties_Properties", "Properties")]
        public Properties Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Properties>("gb_MarketPlusModel.FK_ProductProperties_Properties", "Properties").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Properties>("gb_MarketPlusModel.FK_ProductProperties_Properties", "Properties").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Properties> PropertiesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Properties>("gb_MarketPlusModel.FK_ProductProperties_Properties", "Properties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Properties>("gb_MarketPlusModel.FK_ProductProperties_Properties", "Properties", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_MarketPlusModel", "FK_ProductProperties_PropertyValues", "PropertyValues")]
        public PropertyValues PropertyValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyValues>("gb_MarketPlusModel.FK_ProductProperties_PropertyValues", "PropertyValues").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyValues>("gb_MarketPlusModel.FK_ProductProperties_PropertyValues", "PropertyValues").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyValues> PropertyValuesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyValues>("gb_MarketPlusModel.FK_ProductProperties_PropertyValues", "PropertyValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyValues>("gb_MarketPlusModel.FK_ProductProperties_PropertyValues", "PropertyValues", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_MarketPlusModel", Name="Products")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Products : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Products.
        /// </summary>
        /// <param name="productId">Исходное значение свойства ProductId.</param>
        /// <param name="productName">Исходное значение свойства ProductName.</param>
        /// <param name="categoryId">Исходное значение свойства CategoryId.</param>
        /// <param name="supplierId">Исходное значение свойства SupplierId.</param>
        /// <param name="mainArticleName">Исходное значение свойства MainArticleName.</param>
        /// <param name="retailPrice">Исходное значение свойства RetailPrice.</param>
        /// <param name="primaryPrice">Исходное значение свойства PrimaryPrice.</param>
        /// <param name="priceUAH">Исходное значение свойства PriceUAH.</param>
        /// <param name="isWarranty">Исходное значение свойства IsWarranty.</param>
        /// <param name="isHotProduct">Исходное значение свойства IsHotProduct.</param>
        /// <param name="isFreeDelivery">Исходное значение свойства IsFreeDelivery.</param>
        /// <param name="availability">Исходное значение свойства Availability.</param>
        /// <param name="metaTitle">Исходное значение свойства MetaTitle.</param>
        public static Products CreateProducts(global::System.Int32 productId, global::System.String productName, global::System.Int32 categoryId, global::System.Int32 supplierId, global::System.String mainArticleName, global::System.Decimal retailPrice, global::System.Decimal primaryPrice, global::System.Decimal priceUAH, global::System.Boolean isWarranty, global::System.Boolean isHotProduct, global::System.Boolean isFreeDelivery, global::System.Byte availability, global::System.String metaTitle)
        {
            Products products = new Products();
            products.ProductId = productId;
            products.ProductName = productName;
            products.CategoryId = categoryId;
            products.SupplierId = supplierId;
            products.MainArticleName = mainArticleName;
            products.RetailPrice = retailPrice;
            products.PrimaryPrice = primaryPrice;
            products.PriceUAH = priceUAH;
            products.IsWarranty = isWarranty;
            products.IsHotProduct = isHotProduct;
            products.IsFreeDelivery = isFreeDelivery;
            products.Availability = availability;
            products.MetaTitle = metaTitle;
            return products;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BrandId
        {
            get
            {
                return _BrandId;
            }
            set
            {
                OnBrandIdChanging(value);
                ReportPropertyChanging("BrandId");
                _BrandId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BrandId");
                OnBrandIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BrandId;
        partial void OnBrandIdChanging(Nullable<global::System.Int32> value);
        partial void OnBrandIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplierId
        {
            get
            {
                return _SupplierId;
            }
            set
            {
                OnSupplierIdChanging(value);
                ReportPropertyChanging("SupplierId");
                _SupplierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupplierId");
                OnSupplierIdChanged();
            }
        }
        private global::System.Int32 _SupplierId;
        partial void OnSupplierIdChanging(global::System.Int32 value);
        partial void OnSupplierIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MainArticleName
        {
            get
            {
                return _MainArticleName;
            }
            set
            {
                OnMainArticleNameChanging(value);
                ReportPropertyChanging("MainArticleName");
                _MainArticleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MainArticleName");
                OnMainArticleNameChanged();
            }
        }
        private global::System.String _MainArticleName;
        partial void OnMainArticleNameChanging(global::System.String value);
        partial void OnMainArticleNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RetailPrice
        {
            get
            {
                return _RetailPrice;
            }
            set
            {
                OnRetailPriceChanging(value);
                ReportPropertyChanging("RetailPrice");
                _RetailPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RetailPrice");
                OnRetailPriceChanged();
            }
        }
        private global::System.Decimal _RetailPrice;
        partial void OnRetailPriceChanging(global::System.Decimal value);
        partial void OnRetailPriceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TradePrice
        {
            get
            {
                return _TradePrice;
            }
            set
            {
                OnTradePriceChanging(value);
                ReportPropertyChanging("TradePrice");
                _TradePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradePrice");
                OnTradePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _TradePrice;
        partial void OnTradePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnTradePriceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PrimaryPrice
        {
            get
            {
                return _PrimaryPrice;
            }
            set
            {
                OnPrimaryPriceChanging(value);
                ReportPropertyChanging("PrimaryPrice");
                _PrimaryPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrimaryPrice");
                OnPrimaryPriceChanged();
            }
        }
        private global::System.Decimal _PrimaryPrice;
        partial void OnPrimaryPriceChanging(global::System.Decimal value);
        partial void OnPrimaryPriceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PriceUAH
        {
            get
            {
                return _PriceUAH;
            }
            set
            {
                OnPriceUAHChanging(value);
                ReportPropertyChanging("PriceUAH");
                _PriceUAH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceUAH");
                OnPriceUAHChanged();
            }
        }
        private global::System.Decimal _PriceUAH;
        partial void OnPriceUAHChanging(global::System.Decimal value);
        partial void OnPriceUAHChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private Nullable<global::System.Byte> _Discount;
        partial void OnDiscountChanging(Nullable<global::System.Byte> value);
        partial void OnDiscountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsWarranty
        {
            get
            {
                return _IsWarranty;
            }
            set
            {
                OnIsWarrantyChanging(value);
                ReportPropertyChanging("IsWarranty");
                _IsWarranty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsWarranty");
                OnIsWarrantyChanged();
            }
        }
        private global::System.Boolean _IsWarranty;
        partial void OnIsWarrantyChanging(global::System.Boolean value);
        partial void OnIsWarrantyChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> WarrantyPeriod
        {
            get
            {
                return _WarrantyPeriod;
            }
            set
            {
                OnWarrantyPeriodChanging(value);
                ReportPropertyChanging("WarrantyPeriod");
                _WarrantyPeriod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarrantyPeriod");
                OnWarrantyPeriodChanged();
            }
        }
        private Nullable<global::System.Int16> _WarrantyPeriod;
        partial void OnWarrantyPeriodChanging(Nullable<global::System.Int16> value);
        partial void OnWarrantyPeriodChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsHotProduct
        {
            get
            {
                return _IsHotProduct;
            }
            set
            {
                OnIsHotProductChanging(value);
                ReportPropertyChanging("IsHotProduct");
                _IsHotProduct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsHotProduct");
                OnIsHotProductChanged();
            }
        }
        private global::System.Boolean _IsHotProduct;
        partial void OnIsHotProductChanging(global::System.Boolean value);
        partial void OnIsHotProductChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFreeDelivery
        {
            get
            {
                return _IsFreeDelivery;
            }
            set
            {
                OnIsFreeDeliveryChanging(value);
                ReportPropertyChanging("IsFreeDelivery");
                _IsFreeDelivery = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFreeDelivery");
                OnIsFreeDeliveryChanged();
            }
        }
        private global::System.Boolean _IsFreeDelivery;
        partial void OnIsFreeDeliveryChanging(global::System.Boolean value);
        partial void OnIsFreeDeliveryChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Availability
        {
            get
            {
                return _Availability;
            }
            set
            {
                OnAvailabilityChanging(value);
                ReportPropertyChanging("Availability");
                _Availability = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Availability");
                OnAvailabilityChanged();
            }
        }
        private global::System.Byte _Availability;
        partial void OnAvailabilityChanging(global::System.Byte value);
        partial void OnAvailabilityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MetaTitle
        {
            get
            {
                return _MetaTitle;
            }
            set
            {
                OnMetaTitleChanging(value);
                ReportPropertyChanging("MetaTitle");
                _MetaTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MetaTitle");
                OnMetaTitleChanged();
            }
        }
        private global::System.String _MetaTitle;
        partial void OnMetaTitleChanging(global::System.String value);
        partial void OnMetaTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaKeywords
        {
            get
            {
                return _MetaKeywords;
            }
            set
            {
                OnMetaKeywordsChanging(value);
                ReportPropertyChanging("MetaKeywords");
                _MetaKeywords = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaKeywords");
                OnMetaKeywordsChanged();
            }
        }
        private global::System.String _MetaKeywords;
        partial void OnMetaKeywordsChanging(global::System.String value);
        partial void OnMetaKeywordsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaDescription
        {
            get
            {
                return _MetaDescription;
            }
            set
            {
                OnMetaDescriptionChanging(value);
                ReportPropertyChanging("MetaDescription");
                _MetaDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaDescription");
                OnMetaDescriptionChanged();
            }
        }
        private global::System.String _MetaDescription;
        partial void OnMetaDescriptionChanging(global::System.String value);
        partial void OnMetaDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaKeywordsTags
        {
            get
            {
                return _MetaKeywordsTags;
            }
            set
            {
                OnMetaKeywordsTagsChanging(value);
                ReportPropertyChanging("MetaKeywordsTags");
                _MetaKeywordsTags = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaKeywordsTags");
                OnMetaKeywordsTagsChanged();
            }
        }
        private global::System.String _MetaKeywordsTags;
        partial void OnMetaKeywordsTagsChanging(global::System.String value);
        partial void OnMetaKeywordsTagsChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_MarketPlusModel", "FK_ProductProperties_Products", "ProductProperties")]
        public EntityCollection<ProductProperties> ProductProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductProperties>("gb_MarketPlusModel.FK_ProductProperties_Products", "ProductProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductProperties>("gb_MarketPlusModel.FK_ProductProperties_Products", "ProductProperties", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_MarketPlusModel", "FK_PropertyValues_Products", "PropertyValues")]
        public EntityCollection<PropertyValues> PropertyValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PropertyValues>("gb_MarketPlusModel.FK_PropertyValues_Products", "PropertyValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PropertyValues>("gb_MarketPlusModel.FK_PropertyValues_Products", "PropertyValues", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_MarketPlusModel", Name="Properties")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Properties : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Properties.
        /// </summary>
        /// <param name="propertyId">Исходное значение свойства PropertyId.</param>
        /// <param name="propertyName">Исходное значение свойства PropertyName.</param>
        public static Properties CreateProperties(global::System.Int32 propertyId, global::System.String propertyName)
        {
            Properties properties = new Properties();
            properties.PropertyId = propertyId;
            properties.PropertyName = propertyName;
            return properties;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                if (_PropertyId != value)
                {
                    OnPropertyIdChanging(value);
                    ReportPropertyChanging("PropertyId");
                    _PropertyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyId");
                    OnPropertyIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyName
        {
            get
            {
                return _PropertyName;
            }
            set
            {
                OnPropertyNameChanging(value);
                ReportPropertyChanging("PropertyName");
                _PropertyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyName");
                OnPropertyNameChanged();
            }
        }
        private global::System.String _PropertyName;
        partial void OnPropertyNameChanging(global::System.String value);
        partial void OnPropertyNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubCategoryId
        {
            get
            {
                return _SubCategoryId;
            }
            set
            {
                OnSubCategoryIdChanging(value);
                ReportPropertyChanging("SubCategoryId");
                _SubCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubCategoryId");
                OnSubCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubCategoryId;
        partial void OnSubCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubCategoryIdChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_MarketPlusModel", "FK_Properties_Categories", "Categories")]
        public Categories Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("gb_MarketPlusModel.FK_Properties_Categories", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("gb_MarketPlusModel.FK_Properties_Categories", "Categories").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Categories> CategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("gb_MarketPlusModel.FK_Properties_Categories", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Categories>("gb_MarketPlusModel.FK_Properties_Categories", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_MarketPlusModel", "FK_ProductProperties_Properties", "ProductProperties")]
        public EntityCollection<ProductProperties> ProductProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductProperties>("gb_MarketPlusModel.FK_ProductProperties_Properties", "ProductProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductProperties>("gb_MarketPlusModel.FK_ProductProperties_Properties", "ProductProperties", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_MarketPlusModel", "FK_Properties_SubCategories", "SubCategories")]
        public SubCategories SubCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubCategories>("gb_MarketPlusModel.FK_Properties_SubCategories", "SubCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubCategories>("gb_MarketPlusModel.FK_Properties_SubCategories", "SubCategories").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubCategories> SubCategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubCategories>("gb_MarketPlusModel.FK_Properties_SubCategories", "SubCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubCategories>("gb_MarketPlusModel.FK_Properties_SubCategories", "SubCategories", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_MarketPlusModel", Name="PropertyValues")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyValues : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PropertyValues.
        /// </summary>
        /// <param name="valueId">Исходное значение свойства ValueId.</param>
        /// <param name="productId">Исходное значение свойства ProductId.</param>
        /// <param name="value">Исходное значение свойства Value.</param>
        public static PropertyValues CreatePropertyValues(global::System.Int32 valueId, global::System.Int32 productId, global::System.String value)
        {
            PropertyValues propertyValues = new PropertyValues();
            propertyValues.ValueId = valueId;
            propertyValues.ProductId = productId;
            propertyValues.Value = value;
            return propertyValues;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ValueId
        {
            get
            {
                return _ValueId;
            }
            set
            {
                if (_ValueId != value)
                {
                    OnValueIdChanging(value);
                    ReportPropertyChanging("ValueId");
                    _ValueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ValueId");
                    OnValueIdChanged();
                }
            }
        }
        private global::System.Int32 _ValueId;
        partial void OnValueIdChanging(global::System.Int32 value);
        partial void OnValueIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_MarketPlusModel", "FK_ProductProperties_PropertyValues", "ProductProperties")]
        public EntityCollection<ProductProperties> ProductProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductProperties>("gb_MarketPlusModel.FK_ProductProperties_PropertyValues", "ProductProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductProperties>("gb_MarketPlusModel.FK_ProductProperties_PropertyValues", "ProductProperties", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_MarketPlusModel", "FK_PropertyValues_Products", "Products")]
        public Products Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Products>("gb_MarketPlusModel.FK_PropertyValues_Products", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Products>("gb_MarketPlusModel.FK_PropertyValues_Products", "Products").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Products> ProductsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Products>("gb_MarketPlusModel.FK_PropertyValues_Products", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Products>("gb_MarketPlusModel.FK_PropertyValues_Products", "Products", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_MarketPlusModel", Name="Shops")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Shops : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Shops.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Shops CreateShops(global::System.Byte id, global::System.String name)
        {
            Shops shops = new Shops();
            shops.Id = id;
            shops.Name = name;
            return shops;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Byte _Id;
        partial void OnIdChanging(global::System.Byte value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_MarketPlusModel", Name="SubCategories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubCategories : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта SubCategories.
        /// </summary>
        /// <param name="subCategoryId">Исходное значение свойства SubCategoryId.</param>
        /// <param name="subCategoryName">Исходное значение свойства SubCategoryName.</param>
        /// <param name="categoryId">Исходное значение свойства CategoryId.</param>
        public static SubCategories CreateSubCategories(global::System.Int32 subCategoryId, global::System.String subCategoryName, global::System.Int32 categoryId)
        {
            SubCategories subCategories = new SubCategories();
            subCategories.SubCategoryId = subCategoryId;
            subCategories.SubCategoryName = subCategoryName;
            subCategories.CategoryId = categoryId;
            return subCategories;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubCategoryId
        {
            get
            {
                return _SubCategoryId;
            }
            set
            {
                if (_SubCategoryId != value)
                {
                    OnSubCategoryIdChanging(value);
                    ReportPropertyChanging("SubCategoryId");
                    _SubCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubCategoryId");
                    OnSubCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _SubCategoryId;
        partial void OnSubCategoryIdChanging(global::System.Int32 value);
        partial void OnSubCategoryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubCategoryName
        {
            get
            {
                return _SubCategoryName;
            }
            set
            {
                OnSubCategoryNameChanging(value);
                ReportPropertyChanging("SubCategoryName");
                _SubCategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SubCategoryName");
                OnSubCategoryNameChanged();
            }
        }
        private global::System.String _SubCategoryName;
        partial void OnSubCategoryNameChanging(global::System.String value);
        partial void OnSubCategoryNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_MarketPlusModel", "FK_SubCategories_Categories", "Categories")]
        public Categories Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("gb_MarketPlusModel.FK_SubCategories_Categories", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("gb_MarketPlusModel.FK_SubCategories_Categories", "Categories").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Categories> CategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("gb_MarketPlusModel.FK_SubCategories_Categories", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Categories>("gb_MarketPlusModel.FK_SubCategories_Categories", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_MarketPlusModel", "FK_Properties_SubCategories", "Properties")]
        public EntityCollection<Properties> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Properties>("gb_MarketPlusModel.FK_Properties_SubCategories", "Properties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Properties>("gb_MarketPlusModel.FK_Properties_SubCategories", "Properties", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_MarketPlusModel", Name="Suppliers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Suppliers : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Suppliers.
        /// </summary>
        /// <param name="supplierId">Исходное значение свойства SupplierId.</param>
        /// <param name="supplierName">Исходное значение свойства SupplierName.</param>
        /// <param name="managerName">Исходное значение свойства ManagerName.</param>
        /// <param name="phoneNumber">Исходное значение свойства PhoneNumber.</param>
        public static Suppliers CreateSuppliers(global::System.Int64 supplierId, global::System.String supplierName, global::System.String managerName, global::System.String phoneNumber)
        {
            Suppliers suppliers = new Suppliers();
            suppliers.SupplierId = supplierId;
            suppliers.SupplierName = supplierName;
            suppliers.ManagerName = managerName;
            suppliers.PhoneNumber = phoneNumber;
            return suppliers;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SupplierId
        {
            get
            {
                return _SupplierId;
            }
            set
            {
                if (_SupplierId != value)
                {
                    OnSupplierIdChanging(value);
                    ReportPropertyChanging("SupplierId");
                    _SupplierId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SupplierId");
                    OnSupplierIdChanged();
                }
            }
        }
        private global::System.Int64 _SupplierId;
        partial void OnSupplierIdChanging(global::System.Int64 value);
        partial void OnSupplierIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupplierName
        {
            get
            {
                return _SupplierName;
            }
            set
            {
                OnSupplierNameChanging(value);
                ReportPropertyChanging("SupplierName");
                _SupplierName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SupplierName");
                OnSupplierNameChanged();
            }
        }
        private global::System.String _SupplierName;
        partial void OnSupplierNameChanging(global::System.String value);
        partial void OnSupplierNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagerName
        {
            get
            {
                return _ManagerName;
            }
            set
            {
                OnManagerNameChanging(value);
                ReportPropertyChanging("ManagerName");
                _ManagerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ManagerName");
                OnManagerNameChanged();
            }
        }
        private global::System.String _ManagerName;
        partial void OnManagerNameChanging(global::System.String value);
        partial void OnManagerNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ICQ
        {
            get
            {
                return _ICQ;
            }
            set
            {
                OnICQChanging(value);
                ReportPropertyChanging("ICQ");
                _ICQ = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ICQ");
                OnICQChanged();
            }
        }
        private global::System.String _ICQ;
        partial void OnICQChanging(global::System.String value);
        partial void OnICQChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Skype
        {
            get
            {
                return _Skype;
            }
            set
            {
                OnSkypeChanging(value);
                ReportPropertyChanging("Skype");
                _Skype = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Skype");
                OnSkypeChanged();
            }
        }
        private global::System.String _Skype;
        partial void OnSkypeChanging(global::System.String value);
        partial void OnSkypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Schedule
        {
            get
            {
                return _Schedule;
            }
            set
            {
                OnScheduleChanging(value);
                ReportPropertyChanging("Schedule");
                _Schedule = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Schedule");
                OnScheduleChanged();
            }
        }
        private global::System.String _Schedule;
        partial void OnScheduleChanging(global::System.String value);
        partial void OnScheduleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_MarketPlusModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта sysdiagrams.
        /// </summary>
        /// <param name="name">Исходное значение свойства name.</param>
        /// <param name="principal_id">Исходное значение свойства principal_id.</param>
        /// <param name="diagram_id">Исходное значение свойства diagram_id.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_MarketPlusModel", Name="Transporters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transporters : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Transporters.
        /// </summary>
        /// <param name="transporterId">Исходное значение свойства TransporterId.</param>
        /// <param name="transporterName">Исходное значение свойства TransporterName.</param>
        /// <param name="priceUAH">Исходное значение свойства PriceUAH.</param>
        /// <param name="priceUSD">Исходное значение свойства PriceUSD.</param>
        public static Transporters CreateTransporters(global::System.Int16 transporterId, global::System.String transporterName, global::System.Int16 priceUAH, global::System.Int16 priceUSD)
        {
            Transporters transporters = new Transporters();
            transporters.TransporterId = transporterId;
            transporters.TransporterName = transporterName;
            transporters.PriceUAH = priceUAH;
            transporters.PriceUSD = priceUSD;
            return transporters;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 TransporterId
        {
            get
            {
                return _TransporterId;
            }
            set
            {
                if (_TransporterId != value)
                {
                    OnTransporterIdChanging(value);
                    ReportPropertyChanging("TransporterId");
                    _TransporterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransporterId");
                    OnTransporterIdChanged();
                }
            }
        }
        private global::System.Int16 _TransporterId;
        partial void OnTransporterIdChanging(global::System.Int16 value);
        partial void OnTransporterIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransporterName
        {
            get
            {
                return _TransporterName;
            }
            set
            {
                OnTransporterNameChanging(value);
                ReportPropertyChanging("TransporterName");
                _TransporterName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TransporterName");
                OnTransporterNameChanged();
            }
        }
        private global::System.String _TransporterName;
        partial void OnTransporterNameChanging(global::System.String value);
        partial void OnTransporterNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 PriceUAH
        {
            get
            {
                return _PriceUAH;
            }
            set
            {
                OnPriceUAHChanging(value);
                ReportPropertyChanging("PriceUAH");
                _PriceUAH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceUAH");
                OnPriceUAHChanged();
            }
        }
        private global::System.Int16 _PriceUAH;
        partial void OnPriceUAHChanging(global::System.Int16 value);
        partial void OnPriceUAHChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 PriceUSD
        {
            get
            {
                return _PriceUSD;
            }
            set
            {
                OnPriceUSDChanging(value);
                ReportPropertyChanging("PriceUSD");
                _PriceUSD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceUSD");
                OnPriceUSDChanged();
            }
        }
        private global::System.Int16 _PriceUSD;
        partial void OnPriceUSDChanging(global::System.Int16 value);
        partial void OnPriceUSDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_MarketPlusModel", Name="Units")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Units : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Units.
        /// </summary>
        /// <param name="unitId">Исходное значение свойства UnitId.</param>
        /// <param name="unitName">Исходное значение свойства UnitName.</param>
        public static Units CreateUnits(global::System.Int16 unitId, global::System.String unitName)
        {
            Units units = new Units();
            units.UnitId = unitId;
            units.UnitName = unitName;
            return units;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 UnitId
        {
            get
            {
                return _UnitId;
            }
            set
            {
                if (_UnitId != value)
                {
                    OnUnitIdChanging(value);
                    ReportPropertyChanging("UnitId");
                    _UnitId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnitId");
                    OnUnitIdChanged();
                }
            }
        }
        private global::System.Int16 _UnitId;
        partial void OnUnitIdChanging(global::System.Int16 value);
        partial void OnUnitIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UnitName
        {
            get
            {
                return _UnitName;
            }
            set
            {
                OnUnitNameChanging(value);
                ReportPropertyChanging("UnitName");
                _UnitName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UnitName");
                OnUnitNameChanged();
            }
        }
        private global::System.String _UnitName;
        partial void OnUnitNameChanging(global::System.String value);
        partial void OnUnitNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_MarketPlusModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Users.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="fIO">Исходное значение свойства FIO.</param>
        /// <param name="email">Исходное значение свойства Email.</param>
        /// <param name="phoneNumber">Исходное значение свойства PhoneNumber.</param>
        /// <param name="isDeteled">Исходное значение свойства IsDeteled.</param>
        public static Users CreateUsers(global::System.Int32 id, global::System.String fIO, global::System.String email, global::System.String phoneNumber, global::System.Boolean isDeteled)
        {
            Users users = new Users();
            users.Id = id;
            users.FIO = fIO;
            users.Email = email;
            users.PhoneNumber = phoneNumber;
            users.IsDeteled = isDeteled;
            return users;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FIO
        {
            get
            {
                return _FIO;
            }
            set
            {
                OnFIOChanging(value);
                ReportPropertyChanging("FIO");
                _FIO = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FIO");
                OnFIOChanged();
            }
        }
        private global::System.String _FIO;
        partial void OnFIOChanging(global::System.String value);
        partial void OnFIOChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeteled
        {
            get
            {
                return _IsDeteled;
            }
            set
            {
                OnIsDeteledChanging(value);
                ReportPropertyChanging("IsDeteled");
                _IsDeteled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeteled");
                OnIsDeteledChanged();
            }
        }
        private global::System.Boolean _IsDeteled;
        partial void OnIsDeteledChanging(global::System.Boolean value);
        partial void OnIsDeteledChanged();

        #endregion

    
    }

    #endregion

    
}
